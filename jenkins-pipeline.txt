ansible_server_private_ip="172.31.87.188"
kubernetes_server_private_ip="172.31.10.144"

node{
    stage('Git checkout'){
        git branch: 'main', url: 'https://github.com/khalifemubin/devops-project-one.git'
    }
    
    stage('Sending Dockerfile to Ansible server'){
        sshagent(['ansible-server']) {
            sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip}"
            sh "scp /var/lib/jenkins/workspace/devops-project-one/* ubuntu@${ansible_server_private_ip}:/home/ubuntu"
        }
    }
    
    stage('Docker build image'){
        sshagent(['ansible-server']) {
    	    //building docker image starts
            sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} cd /home/ubuntu/"
            sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker image build -t $JOB_NAME:v-$BUILD_ID ."
    	    //building docker image ends
    	    //Tagging docker image starts
            sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker image tag $JOB_NAME:v-$BUILD_ID kubemubin/$JOB_NAME:v-$BUILD_ID"
    	    sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker image tag $JOB_NAME:v-$BUILD_ID kubemubin/$JOB_NAME:latest"
    	    //Tagging docker image ends
        }
    }
    
    stage('push docker images to dockerhub'){
        sshagent(['ansible-server']) {
    		withCredentials([string(credentialsId:'dockerhub_passwd', variable: 'dockerhub_passwd')]){
    			sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker login -u kubemubin -p ${dockerhub_passwd}"
    			sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker image push kubemubin/$JOB_NAME:v-$BUILD_ID"
    			sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker image push kubemubin/$JOB_NAME:latest"
    			
    			//also delete old docker images
			    sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} docker image rm kubemubin/$JOB_NAME:v-$BUILD_ID kubemubin/$JOB_NAME:latest $JOB_NAME:v-$BUILD_ID"
    		}
        }
    }
    
    stage('Copy files from jenkins to kubernetes server'){
        sshagent(['kubernetes-server']) {
    		sh "ssh -o StrictHostKeyChecking=no ubuntu@${kubernetes_server_private_ip} cd /home/ubuntu/"
    		sh "scp /var/lib/jenkins/workspace/devops-project-one/* ubuntu@${kubernetes_server_private_ip}:/home/ubuntu"
	    }
    }
	
	stage('Kubernetes deployment using ansible'){
        sshagent(['ansible-server']) {
    		sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} cd /home/ubuntu/"
    		sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} ansible -m ping ${kubernetes_server_private_ip}"
    		sh "ssh -o StrictHostKeyChecking=no ubuntu@${ansible_server_private_ip} ansible-playbook ansible-playbook.yml"
    	}	
    }
    
    stage('On kubernetes server do port forward of kubectl'){
        sshagent(['kubernetes-server']) {
            sh "ssh -o StrictHostKeyChecking=no ubuntu@${kubernetes_server_private_ip} kubectl port-forward --address 0.0.0.0 svc/myfirstdevopsservice 30000:80 &"
            sh "ssh -o StrictHostKeyChecking=no ubuntu@${kubernetes_server_private_ip} BUILD_ID=dontKillMe nohup bash /home/ubuntu/kubect-port-forward.sh &"
            //BUILD_ID=dontKillMe nohup bash relaunch.sh &
        }

    }
	
}
